name: RijksMuseum API Tests

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v4

    # Step 2: Set up JDK 11
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '11'

    # Step 3: Cache Maven dependencies for faster builds
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven

    # Step 4: Install dependencies and run tests
    - name: Build with Maven and Run Tests
      run: mvn clean test -Dmaven.compiler.source=1.8 -Dmaven.compiler.target=1.8

    # Step 5: Generate Allure Results
    - name: Install Allure CLI
      run: |
        wget https://github.com/allure-framework/allure2/releases/download/2.20.0/allure-2.20.0.zip
        unzip -o allure-2.20.0.zip -d /home/runner/
        mv /home/runner/allure-2.20.0 /home/runner/.allure
    
    - name: Generate Allure Report
      run: |
        mvn allure:report -Dmaven.compiler.source=1.8 -Dmaven.compiler.target=1.8
        /home/runner/.allure/allure generate target/allure-results -o target/allure-report --clean

    # Step 6: Upload Allure Report as an Artifact
    - name: Upload Allure Report
      uses: actions/upload-artifact@v4
      with:
        name: allure-report
        path: target/allure-report

# Merge rules after passing all tests
  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Ensure all checks have passed before merge
        run: echo "All tests have passed. Proceed to merge if needed."
